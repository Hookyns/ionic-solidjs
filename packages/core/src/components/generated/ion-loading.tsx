// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-loading'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonLoadingProps = FixIonProps<IonicJSX.IonLoading> &
	JSXBase.HTMLAttributes<HTMLIonLoadingElement>

export function IonLoading(props: IonLoadingProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['animated', 'backdropDismiss', 'cssClass', 'duration', 'enterAnimation', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'message', 'mode', 'onDidDismiss', 'onDidPresent', 'onWillDismiss', 'onWillPresent', 'showBackdrop', 'spinner', 'translucent', 'trigger'],
		['children'],
		['on:ionLoadingDidDismiss', 'on:ionLoadingDidPresent', 'on:ionLoadingWillDismiss', 'on:ionLoadingWillPresent']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-loading {...componentProps()} {...attrs()} {...events}>{children.children}</ion-loading>;
}
