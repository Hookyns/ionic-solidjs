// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-textarea'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonTextareaProps = FixIonProps<IonicJSX.IonTextarea> &
	JSXBase.HTMLAttributes<HTMLIonTextareaElement>

export function IonTextarea(props: IonTextareaProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['autoGrow', 'autocapitalize', 'autofocus', 'clearOnEdit', 'color', 'cols', 'counter', 'counterFormatter', 'debounce', 'disabled', 'enterkeyhint', 'errorText', 'fill', 'helperText', 'inputmode', 'label', 'labelPlacement', 'maxlength', 'minlength', 'mode', 'name', 'placeholder', 'readonly', 'required', 'rows', 'shape', 'spellcheck', 'value', 'wrap'],
		['children'],
		['on:ionBlur', 'on:ionChange', 'on:ionFocus', 'on:ionInput']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-textarea {...componentProps()} {...attrs()} {...events}>{children.children}</ion-textarea>;
}
