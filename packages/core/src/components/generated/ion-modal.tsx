// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-modal'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonModalProps = FixIonProps<IonicJSX.IonModal> &
	JSXBase.HTMLAttributes<HTMLIonModalElement>

export function IonModal(props: IonModalProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['animated', 'backdropBreakpoint', 'backdropDismiss', 'breakpoints', 'canDismiss', 'enterAnimation', 'focusTrap', 'handle', 'handleBehavior', 'htmlAttributes', 'initialBreakpoint', 'isOpen', 'keepContentsMounted', 'keyboardClose', 'leaveAnimation', 'mode', 'onDidDismiss', 'onDidPresent', 'onWillDismiss', 'onWillPresent', 'presentingElement', 'showBackdrop', 'trigger'],
		['children'],
		['on:ionBreakpointDidChange', 'on:ionModalDidDismiss', 'on:ionModalDidPresent', 'on:ionModalWillDismiss', 'on:ionModalWillPresent']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-modal {...componentProps()} {...attrs()} {...events}>{children.children}</ion-modal>;
}
