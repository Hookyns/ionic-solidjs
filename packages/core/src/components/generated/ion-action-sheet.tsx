// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-action-sheet'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonActionSheetProps = FixIonProps<IonicJSX.IonActionSheet> &
	JSXBase.HTMLAttributes<HTMLIonActionSheetElement>

export function IonActionSheet(props: IonActionSheetProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['animated', 'backdropDismiss', 'buttons', 'cssClass', 'enterAnimation', 'header', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'onDidDismiss', 'onDidPresent', 'onWillDismiss', 'onWillPresent', 'subHeader', 'translucent', 'trigger'],
		['children'],
		['on:ionActionSheetDidDismiss', 'on:ionActionSheetDidPresent', 'on:ionActionSheetWillDismiss', 'on:ionActionSheetWillPresent']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-action-sheet {...componentProps()} {...attrs()} {...events}>{children.children}</ion-action-sheet>;
}
