// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-select'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonSelectProps = FixIonProps<IonicJSX.IonSelect> &
	JSXBase.HTMLAttributes<HTMLIonSelectElement>

export function IonSelect(props: IonSelectProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['cancelText', 'color', 'compareWith', 'disabled', 'expandedIcon', 'fill', 'interface', 'interfaceOptions', 'justify', 'label', 'labelPlacement', 'mode', 'multiple', 'name', 'okText', 'placeholder', 'selectedText', 'shape', 'toggleIcon', 'value'],
		['children'],
		['on:ionBlur', 'on:ionCancel', 'on:ionChange', 'on:ionDismiss', 'on:ionFocus']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-select {...componentProps()} {...attrs()} {...events}>{children.children}</ion-select>;
}
