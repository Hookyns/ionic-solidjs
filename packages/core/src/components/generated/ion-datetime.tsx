// Auto-generated by scripts/generate.ts

import { defineCustomElement } from '@ionic/core/components/ion-datetime'
import type { JSX as IonicJSX } from '@ionic/core'
import { type JSX as JSXBase, splitProps } from 'solid-js'
import type { FixIonProps } from '../../lib'
import { prefixJSProps, prefixHTMLAttributes } from "../../utils/fixProps";

defineCustomElement()

export type IonDatetimeProps = FixIonProps<IonicJSX.IonDatetime> &
	JSXBase.HTMLAttributes<HTMLIonDatetimeElement>

export function IonDatetime(props: IonDatetimeProps) {
	const [ componentProperties, children, events, attributes ] = splitProps(
		props, 
		['cancelText', 'clearText', 'color', 'dayValues', 'disabled', 'doneText', 'firstDayOfWeek', 'formatOptions', 'highlightedDates', 'hourCycle', 'hourValues', 'isDateEnabled', 'locale', 'max', 'min', 'minuteValues', 'mode', 'monthValues', 'multiple', 'name', 'preferWheel', 'presentation', 'readonly', 'showClearButton', 'showDefaultButtons', 'showDefaultTimeLabel', 'showDefaultTitle', 'size', 'titleSelectedDatesFormatter', 'value', 'yearValues'],
		['children'],
		['on:ionBlur', 'on:ionCancel', 'on:ionChange', 'on:ionFocus']);
	const attrs = () => prefixHTMLAttributes(attributes);
	const componentProps = () => prefixJSProps(componentProperties);

	return <ion-datetime {...componentProps()} {...attrs()} {...events}>{children.children}</ion-datetime>;
}
